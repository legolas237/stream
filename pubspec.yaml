name: stream
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.12.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  # Fonts
  google_fonts: ^2.1.0
  # Localization
  intl: ^0.17.0
  # For http and json serialization
  dio: ^4.0.0
  # For BLoC design pattern
  bloc: ^7.0.0
  equatable: ^2.0.3
  flutter_bloc: ^7.0.0
  pedantic: ^1.11.1
  # Getx api & Storage Management
  get: ^4.1.4
  get_storage: ^2.0.2
  getwidget: ^2.0.3

  # Others
  statusbarz: ^1.0.2
  basic_utils: ^3.3.3
  auto_size_text: ^3.0.0-nullsafety.0
  flutter_multi_formatter: ^2.3.3
  flutter_form_builder: ^6.0.1
  flutter_datetime_picker: ^1.5.1
  flutter_masked_text2: ^0.9.1
  pull_to_refresh: ^2.0.0
  simple_moment: ^1.1.1
  carousel_slider: ^4.0.0
  flutter_calendar_carousel: ^2.0.3
  country_icons: ^2.0.2
  page_transition: ^2.0.4
  dots_indicator: ^2.0.0
  font_awesome_flutter: ^9.2.0
  flutter_animator: ^3.2.0
  scroll_date_picker: ^2.0.5
  substring_highlight: ^1.0.33
  grouped_list: ^4.1.0
  flutter_libphonenumber: 1.0.3
  percent_indicator: ^3.4.0
  string_validator: ^0.3.0
  device_info: ^2.0.3

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_launcher_icons: ^0.9.2

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^1.0.0

# Manage app launch icon
# Add your Flutter Launcher Icons configuration to your pubspec.yaml or create a new
# config file called flutter_launcher_icons.yaml. An example is shown below.
flutter_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/o_stream_logo.png"

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  # Also, in the pubspec.yaml file, enable the generate flag. This is added to the section
  # of the pubspec that is specific to Flutter, and usually comes later in the pubspec file.
  generate: true

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
      - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Poppins
      fonts:
        - asset: assets/fonts/poppins/Poppins-Thin.ttf
          weight: 100
        - asset: assets/fonts/poppins/Poppins-ExtraLight.ttf
          weight: 200
        - asset: assets/fonts/poppins/Poppins-Light.ttf
          weight: 300
        - asset: assets/fonts/poppins/Poppins-Regular.ttf
          weight: 400
        - asset: assets/fonts/poppins/Poppins-Medium.ttf
          weight: 500
        - asset: assets/fonts/poppins/Poppins-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/poppins/Poppins-Bold.ttf
          weight: 700
        - asset: assets/fonts/poppins/Poppins-ExtraBold.ttf
          weight: 800
        - asset: assets/fonts/poppins/Poppins-Black.ttf
          weight: 900
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
